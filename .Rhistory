set_engine("lm") %>%
fit(cnt ~ temperature_raw, data = dcbikeshare)
cnt_tmp %>%
tidy()
glance(cnt_tmp)$r.squared
cnt_atmp <- linear_reg() %>%
set_engine("lm") %>%
fit(cnt ~ feeling_temperature_raw, data = dcbikeshare)
cnt_atmp %>%
tidy()
glance(cnt_atmp)$r.squared
cnt_full <- linear_reg() %>%
set_engine("lm") %>%
fit(cnt ~ season + yr + holiday + workingday + weathersit +
temperature_raw + feeling_temperature_raw + humidity_raw +
windspeed_raw + feeling_temperature_raw * holiday,
data = dcbikeshare)
tidy(cnt_full)
glance(cnt_full)$adj.r.squared
rm_season <- linear_reg() %>%
set_engine("lm") %>%
fit(cnt ~ season, data = cnt_full)
library(tidyverse)
library(dsbox)
library(lubridate)
library(ggplot2)
bike_data <- read_csv("202209-capitalbikeshare-tripdata.csv")
bike_data_m <- bike_data %>%
filter(member_casual == "member")
bike_data_c <- bike_data %>%
filter(member_casual == "casual")
ggplot(bike_data_m, mapping = aes(x = start_lng, y = start_lat)) +
geom_point()
ggplot(bike_data_c, mapping = aes(x = start_lng, y = start_lat)) +
geom_point()
time_bike = 1:1440
bikes_out = 1:1440
df_1 <- data.frame(time_bike,bikes_out)
bike_data_use <- bike_data %>%
select(started_at) %>%
separate(started_at, c("date", "time"), " ") %>%
separate(time, c("hour","minute","second"), ":") %>%
mutate(minu = as.numeric(hour)*60 + as.numeric(minute))%>%
separate(date, c("year","month","day"), "-") %>%
filter(day == "01")
ggplot(bike_data_use, aes(x= minu)) + geom_dotplot(binwidth = 5)
library(knitr)
library(tidyverse)
library(janitor)
library(lubridate)
library(here)
library(sf)
library(tmap)
library(tidycensus)
library(dsbox)
library(ggplot2)
library(gbfs)
library(dplyr)
library(stringr)
library(nabor)
library(knitr)
library(tidyverse)
library(janitor)
library(lubridate)
library(here)
library(sf)
library(tmap)
library(tidycensus)
library(dsbox)
library(ggplot2)
library(gbfs)
library(dplyr)
library(stringr)
bikeshare = read_csv(here("202209-capitalbikeshare-tripdata.csv")) %>%
clean_names() %>% select(ride_id, start_lat, start_lng, end_lat, end_lng) %>%
filter(!is.na(end_lat), !is.na(end_lng))
census_api_key("74bc918a78c720321d756d915a6094c8b101b31f")
census=get_acs(geography = "tract",
variables=c("pop"="B01001_001"),
state="DC",geometry=TRUE,year=2018)
bikeshare = read_csv(here("202209-capitalbikeshare-tripdata.csv")) %>%
clean_names() %>% select(ride_id, start_lat, start_lng, end_lat, end_lng) %>%
filter(!is.na(end_lat), !is.na(end_lng))
##census_api_key("74bc918a78c720321d756d915a6094c8b101b31f")
census_api_key("00b78ce52463bf386a260d23ec58edb622e6d3ac")
census=get_acs(geography = "tract",
variables=c("pop"="B01001_001"),
state="DC",geometry=TRUE,year=2018)
census_wide = census %>% select(-moe) %>% spread(variable, estimate) %>%
select(GEOID, pop, geometry) %>% st_transform(4326)
bikeshare_start_pts = bikeshare %>% select(start_lng, start_lat) %>%
st_as_sf(coords=c("start_lng", "start_lat"), crs=st_crs(census_wide))
bike_census = census_wide %>% mutate(start_count =
lengths(st_intersects(., bikeshare_start_pts)))
bikeshare_end_pts = bikeshare %>% select(end_lng, end_lat) %>%
st_as_sf(coords=c("end_lng", "end_lat"), crs=st_crs(census_wide))
bike_census = bike_census %>% mutate(end_count =
lengths(st_intersects(., bikeshare_start_pts)))
tmap_mode("view")
tm_shape(bike_census) + tm_polygons(c("pop", "start_count", "end_count"), alpha=0.5)
library(tidyverse)
library(dsbox)
library(lubridate)
library(ggplot2)
library(janitor)
library(here)
install.packages("gbfs")
library(gbfs)
station_info <- get_station_information("https://gbfs.biketownpdx.com/gbfs/gbfs.json")
glimpse(station_info)
station_status <- get_station_status("https://gbfs.biketownpdx.com/gbfs/gbfs.json")
glimpse(station_status)
stations <- full_join(station_info, station_status, by = "station_id") %>%
select(id = station_id, lon, lat, num_bikes_available, num_docks_available) %>%
mutate(type = "docked")
free_bikes <- get_free_bike_status("https://gbfs.biketownpdx.com/gbfs/gbfs.json", output = "return") %>%
select(id = bike_id, lon, lat) %>%
mutate(num_bikes_available = 1, num_docks_available = NA, type = "free")
bike_data_full <- bind_rows(stations, free_bikes)
bike_plot <- bike_data_full %>%
filter(num_bikes_available > 0) %>%
ggplot() +
aes(x = lon, y = lat, size = num_bikes_available, col = type) +
geom_point() +
theme_minimal() +
scale_color_brewer(type = "qual")
bike_plot
library(tidyverse)
library(dsbox)
library(lubridate)
library(ggplot2)
library(janitor)
library(here)
install.packages("gbfs")
library(gbfs)
station_info <- get_station_information("https://gbfs.biketownpdx.com/gbfs/gbfs.json")
glimpse(station_info)
station_status <- get_station_status("https://gbfs.biketownpdx.com/gbfs/gbfs.json")
glimpse(station_status)
stations <- full_join(station_info, station_status, by = "station_id") %>%
select(id = station_id, lon, lat, num_bikes_available, num_docks_available) %>%
mutate(type = "docked")
free_bikes <- get_free_bike_status("https://gbfs.biketownpdx.com/gbfs/gbfs.json", output = "return") %>%
select(id = bike_id, lon, lat) %>%
mutate(num_bikes_available = 1, num_docks_available = NA, type = "free")
bike_data_full <- bind_rows(stations, free_bikes)
bike_plot <- bike_data_full %>%
filter(num_bikes_available > 0) %>%
ggplot() +
aes(x = lon, y = lat, size = num_bikes_available, col = type) +
geom_point() +
theme_minimal() +
scale_color_brewer(type = "qual")
bike_plot
library(tidyverse)
library(dsbox)
library(lubridate)
library(ggplot2)
library(janitor)
library(here)
install.packages("gbfs")
library(gbfs)
bike_data <- read_csv("202209-capitalbikeshare-tripdata.csv") %>% clean_names()
bike_data_m <- bike_data %>%
filter(member_casual == "member")
bike_data_c <- bike_data %>%
filter(member_casual == "casual")
ggplot(bike_data_m, mapping = aes(x = start_lng, y = start_lat)) +
geom_point()
ggplot(bike_data_c, mapping = aes(x = start_lng, y = start_lat)) +
geom_point()
library(tidyverse)
library(dsbox)
library(lubridate)
library(ggplot2)
library(janitor)
library(here)
install.packages("gbfs")
library(gbfs)
bike_data <- read_csv("202209-capitalbikeshare-tripdata.csv") %>% clean_names()
bike_data_m <- bike_data %>%
filter(member_casual == "member")
bike_data_c <- bike_data %>%
filter(member_casual == "casual")
ggplot(bike_data_m, mapping = aes(x = start_lng, y = start_lat)) +
geom_point()
ggplot(bike_data_c, mapping = aes(x = start_lng, y = start_lat)) +
geom_point()
library(knitr)
library(tidyverse)
library(janitor)
library(lubridate) # because we will probably see some dates
library(here) # a package I haven't taught you about before that doesn't do much, but ....
library(sf)
library(tmap)
library(tidycensus)
library(sf) # working with simple features - geospatial
library(tmap)
library(tidycensus)
neigh=st_read(here("DC_Health_Planning_Neighborhoods.geojson")) %>% clean_names()
class(neigh)
plot(neigh)
df1=tibble(fruit=c("apple","banana","cherry"),cost=c(1.5,1.2,2.25))
df2=tibble(fruit=c("apple","apple","cherry","lemon"),
desert=c("pie","cobbler","cobbler","cheesecake"),
cal=c(400,430,500,550))
df1
df2
left_join(df1,df2,by="fruit")
df_c=read_csv(here("DC_COVID-19_Total_Positive_Cases_by_Neighborhood.csv")) %>% clean_names()
df_cases=df_c %>%
filter(as_date(date_reported) == "2022-02-22") %>%
separate(neighborhood,into=c("code","name"),sep = ":") %>%
mutate(code=case_when(
code=="N35" ~"N0",
TRUE ~ code
)) %>%
select(-objectid,-date_reported)
neigh2=left_join(neigh,df_cases,by=c("code"))
tmap_mode("view")
tm_shape(neigh2) +tm_polygons("total_positives",alpha=.5)
census_api_key("00b78ce52463bf386a260d23ec58edb622e6d3ac")
#what variables
v20 = load_variables(2018,"acs5")
# median_family_income="	B06011_001"
# all "B00001_001"
#black "B02009_001"
df_cencus=get_acs(geography = "tract",
variables=c("median_inc"="B06011_001",
"pop"="B01001_001",
"pop_black"="B02009_001"),
state="DC",geometry=TRUE,year=2018)
class(df_cencus)
plot(df_cencus)
df_cens=df_cencus %>% select(-moe) %>% spread(variable,estimate)
tm_shape(df_cens) +tm_polygons("median_inc",alpha=.5)
tm_shape(neigh2) +tm_borders(col="blue",lwd=5,alpha=.2)+
tm_shape(df_cens) +tm_borders(col="red",lwd=1,alpha=.3)
#<<<<<<< HEAD
#df_j=st_join(df_cens,neigh2)
#=======
#df_j=st_join(df_cens,neigh2,prepared=FALSE)
#>>>>>>> aaf01be5cf721819dd2df615aef7a1999bcec0c2
df_cens_adj=df_cens %>% st_transform(4326)
df_j=st_join(df_cens_adj,neigh2,largest=TRUE)
#<<<<<<< HEAD
##df_j_rev = st_join(neigh2,df_cens_adj,largest=TRUE)
#=======
#df_j_rev = st_join(neigh2,df_cens_adj,largest=TRUE)
#>>>>>>> aaf01be5cf721819dd2df615aef7a1999bcec0c2
df1=df_j %>% select(median_inc,pop,pop_black,objectid) %>%
group_by(objectid) %>%
summarise(pop_n=sum(pop),
pop_black_n=sum(pop_black),
adj_median_income=sum(pop*median_inc)/pop_n)
plot(df1)
#df2=left_join(neigh2,df1)
df2=left_join(neigh2,df1 %>% st_set_geometry(NULL))
df2=df2 %>% mutate(black_perc=pop_black_n/pop_n, covid_rate=total_positives/pop_n)
tm_shape(df2)+tm_polygons(c("adj_median_income","covid_rate","black_perc"))
df2 %>% filter(objectid!=30) %>% tm_shape()+tm_polygons(c("adj_median_income","covid_rate","black_perc"),alpha=.4)
#devtools::install_github("jamgreen/lehdr")
library(knitr)
library(tidyverse)
library(janitor)
library(lubridate) # because we will probably see some dates
library(here) # a package I haven't taught you about before that doesn't do much, but ....
library(sf) # working with simple features - geospatial
library(tmap)
library(tidycensus)
library(lehdr)
or_od <- grab_lodes(state = "or", year = 2014, lodes_type = "od", job_type = "JT00",
segment = "S000", state_part = "main", agg_geo = "tract")
head(or_od)
or_ri_od <- grab_lodes(state = c("or", "ri"), year = c(2013, 2014), lodes_type = "od", job_type = "JT01",
segment = "S000", state_part = "main", agg_geo = "tract")
dc_od <- grab_lodes(state ="dc", year = 2019, lodes_type = "od", job_type = "JT01",
segment = "S000", state_part = "aux", agg_geo = "tract",use_cache=TRUE)
head(dc_od)
sum(dc_od$S000)
dc_wac <- grab_lodes(state = c("dc"), year = 2019, lodes_type = "wac", job_type = "JT00",
segment = "S000", state_part = "aux", agg_geo = "tract") %>% filter(state=="DC")
dc_rac <- grab_lodes(state = c("dc"), year = 2019, lodes_type = "rac", job_type = "JT00",
segment = "S000", state_part = "aux", agg_geo = "tract") %>% filter(state=="DC")
head(dc_wac)
sum(dc_wac$C000)
sum(dc_rac$C000)
census_api_key("4c7e5b613afdf7d2fd6d80005f53282c9a7c1bae")
#what variables
v20 = load_variables(2019,"acs5",cache=TRUE)
# median_family_income="	B06011_001"
# all "B00001_001"
#black "B02009_001"
df_census=get_acs(geography = "tract",
variables=c(
"total_pop"="B01003_001",
"worker_living"="B08301_001"),
state="DC",geometry=TRUE,year=2019)
df_cens=df_census %>% rename(val=estimate) %>%
pivot_wider(names_from = "variable",
values_from = c("val","moe")) %>%
clean_names()
tmap_mode("view")
tm_shape(df_cens) +tm_polygons("val_total_pop",alpha=.5)
sum(df_cens$val_worker_living)
sum(dc_rac$C000)
df_c=df_cens %>% left_join(dc_wac,by=c("geoid"="w_tract"))
df_c1=df_c %>% select(pop=val_total_pop, men=CS01,women=CS02) %>% #renames while selecting
mutate(ratio=women/men)
df_c1%>%
tm_shape()+tm_polygons(c("pop","men","women"),alpha=.4)
df_c1%>%
tm_shape()+tm_polygons(c("ratio"),alpha=.4)
df_c %>% select(white_workers=CR01, black_workers=CR02,hispanic_workers=CT02) %>%
tm_shape()+tm_polygons(c("white_workers","black_workers","hispanic_workers"),alpha=.4)
library(tidyverse)
library(tidymodels)
library(dsbox)
# summary(dcbikeshare)
view(dcbikeshare)
dcbikeshare <- dcbikeshare %>%
mutate(
season = case_when(
season == 1 ~ "winter",
season == 2 ~ "spring",
season == 3 ~ "summer",
season == 4 ~ "fall"
),
season = fct_relevel(season, "spring", "summer", "fall", "winter")
)
dcbikeshare <- dcbikeshare %>%
mutate(
holiday = ifelse(holiday == 0, "no", "yes"),
holiday = fct_relevel(holiday, "no", "yes"),
workingday = ifelse(workingday == 0, "no", "yes"),
workingday = fct_relevel(workingday, "no", "yes")
)
dcbikeshare <- dcbikeshare %>%
mutate(
yr = ifelse(yr == 0, "2011", "2012"),
yr = fct_relevel(yr, "2011", "2012")
)
dcbikeshare <- dcbikeshare %>%
mutate(
weathersit = case_when(
weathersit == 1 ~ "clear",
weathersit == 2 ~ "mist",
weathersit == 3 ~ "light precipitation",
weathersit == 4 ~ "heavy precipitation"
),
weathersit = fct_relevel(weathersit, "clear", "mist", "light precipitation", "heavy precipitation")
)
dcbikeshare <- dcbikeshare %>%
mutate(
temperature_raw = temp * 41,
feeling_temperature_raw = atemp * 50,
humidity_raw = hum * 100,
windspeed_raw = windspeed * 67
)
dcbikeshare %>%
mutate(cas_plus_reg = casual + registered) %>%
summarise(all_zero = all(cas_plus_reg == cnt))
dcbikeshare %>%
ggplot(mapping = aes(x = dteday, y = cnt, color = feeling_temperature_raw)) +
geom_point(alpha = 0.7) +
labs(
title = "Bike rentals in DC, 2011 and 2012",
subtitle = "Warmer temperatures associated with more bike rentals",
x = "Date",
y = "Bike rentals",
color = "Temperature (C)"
) +
theme_minimal()
cnt_tmp <- linear_reg() %>%
set_engine("lm") %>%
fit(cnt ~ temperature_raw, data = dcbikeshare)
cnt_tmp %>%
tidy()
glance(cnt_tmp)$r.squared
cnt_atmp <- linear_reg() %>%
set_engine("lm") %>%
fit(cnt ~ feeling_temperature_raw, data = dcbikeshare)
cnt_atmp %>%
tidy()
glance(cnt_atmp)$r.squared
cnt_full <- linear_reg() %>%
set_engine("lm") %>%
fit(cnt ~ season + yr + holiday + workingday + weathersit +
temperature_raw + feeling_temperature_raw + humidity_raw +
windspeed_raw + feeling_temperature_raw * holiday,
data = dcbikeshare)
tidy(cnt_full)
glance(cnt_full)$adj.r.squared
rm_season <- linear_reg() %>%
set_engine("lm") %>%
fit(cnt ~ season, data = cnt_full)
library(knitr)
library(tidyverse)
library(janitor)
library(lubridate) # because we will probably see some dates
library(here) # a package I haven't taught you about before that doesn't do much, but ....
library(sf)
library(tmap)
library(tidycensus)
library(sf) # working with simple features - geospatial
library(tmap)
library(tidycensus)
neigh=st_read(here("DC_Health_Planning_Neighborhoods.geojson")) %>% clean_names()
class(neigh)
plot(neigh)
df1=tibble(fruit=c("apple","banana","cherry"),cost=c(1.5,1.2,2.25))
df2=tibble(fruit=c("apple","apple","cherry","lemon"),
desert=c("pie","cobbler","cobbler","cheesecake"),
cal=c(400,430,500,550))
df1
df2
left_join(df1,df2,by="fruit")
df_c=read_csv(here("DC_COVID-19_Total_Positive_Cases_by_Neighborhood.csv")) %>% clean_names()
df_cases=df_c %>%
filter(as_date(date_reported) == "2022-02-22") %>%
separate(neighborhood,into=c("code","name"),sep = ":") %>%
mutate(code=case_when(
code=="N35" ~"N0",
TRUE ~ code
)) %>%
select(-objectid,-date_reported)
neigh2=left_join(neigh,df_cases,by=c("code"))
tmap_mode("view")
tm_shape(neigh2) +tm_polygons("total_positives",alpha=.5)
neigh2=left_join(neigh,df_cases,by=c("code"))
tmap_mode("view")
tm_shape(neigh2) + tm_polygons("total_positives",alpha=.5)
View(neigh2)
library(knitr)
library(tidyverse)
library(janitor)
library(lubridate) # because we will probably see some dates
library(here) # a package I haven't taught you about before that doesn't do much, but ....
library(sf)
library(tmap)
library(tidycensus)
library(sf) # working with simple features - geospatial
library(tmap)
library(tidycensus)
neigh=st_read(here("DC_Health_Planning_Neighborhoods.geojson")) %>% clean_names()
class(neigh)
plot(neigh)
df1=tibble(fruit=c("apple","banana","cherry"),cost=c(1.5,1.2,2.25))
df2=tibble(fruit=c("apple","apple","cherry","lemon"),
desert=c("pie","cobbler","cobbler","cheesecake"),
cal=c(400,430,500,550))
df1
df2
left_join(df1,df2,by="fruit")
df_c=read_csv(here("DC_COVID-19_Total_Positive_Cases_by_Neighborhood.csv")) %>% clean_names()
df_cases=df_c %>%
filter(as_date(date_reported) == "2022-02-22") %>%
separate(neighborhood,into=c("code","name"),sep = ":") %>%
mutate(code=case_when(
code=="N35" ~"N0",
TRUE ~ code
)) %>%
select(-objectid,-date_reported)
neigh2=left_join(neigh,df_cases,by=c("code"))
tmap_mode("view")
tm_shape(neigh2) + tm_polygons("total_positives",alpha=.5)
census_api_key("00b78ce52463bf386a260d23ec58edb622e6d3ac")
#what variables
v20 = load_variables(2018,"acs5")
# median_family_income="	B06011_001"
# all "B00001_001"
#black "B02009_001"
df_cencus=get_acs(geography = "tract",
variables=c("median_inc"="B06011_001",
"pop"="B01001_001",
"pop_black"="B02009_001"),
state="DC",geometry=TRUE,year=2018)
class(df_cencus)
plot(df_cencus)
df_cens=df_cencus %>% select(-moe) %>% spread(variable,estimate)
tm_shape(df_cens) +tm_polygons("median_inc",alpha=.5)
tm_shape(neigh2) +tm_borders(col="blue",lwd=5,alpha=.2)+
tm_shape(df_cens) +tm_borders(col="red",lwd=1,alpha=.3)
#<<<<<<< HEAD
#df_j=st_join(df_cens,neigh2)
#=======
#df_j=st_join(df_cens,neigh2,prepared=FALSE)
#>>>>>>> aaf01be5cf721819dd2df615aef7a1999bcec0c2
df_cens_adj=df_cens %>% st_transform(4326)
df_j=st_join(df_cens_adj,neigh2,largest=TRUE)
#<<<<<<< HEAD
##df_j_rev = st_join(neigh2,df_cens_adj,largest=TRUE)
#=======
#df_j_rev = st_join(neigh2,df_cens_adj,largest=TRUE)
#>>>>>>> aaf01be5cf721819dd2df615aef7a1999bcec0c2
df1=df_j %>% select(median_inc,pop,pop_black,objectid) %>%
group_by(objectid) %>%
summarise(pop_n=sum(pop),
pop_black_n=sum(pop_black),
adj_median_income=sum(pop*median_inc)/pop_n)
plot(df1)
#df2=left_join(neigh2,df1)
df2=left_join(neigh2,df1 %>% st_set_geometry(NULL))
df2=df2 %>% mutate(black_perc=pop_black_n/pop_n, covid_rate=total_positives/pop_n)
tm_shape(df2)+tm_polygons(c("adj_median_income","covid_rate","black_perc"))
df2 %>% filter(objectid!=30) %>% tm_shape()+tm_polygons(c("adj_median_income","covid_rate","black_perc"),alpha=.4)
View(df_cens)
View(bike_data)
rm_season <- linear_reg() %>%
set_engine("lm") %>%
fit(cnt ~ season, data = cnt_full)
View(df_cens)
